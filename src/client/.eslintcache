[{"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/index.tsx":"1","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/reportWebVitals.ts":"2","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/App.tsx":"3","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Newsfeed.tsx":"4","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/hooks/usePostFetch.ts":"5","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Post.tsx":"6","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Navbar.tsx":"7","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Sidebar.tsx":"8","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Source.tsx":"9","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/constants/feeds.ts":"10","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Tag.tsx":"11","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/pages/Home.tsx":"12","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/pages/Login.tsx":"13","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/pages/Profile.tsx":"14","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/reducers/rootReducer.ts":"15","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/reducers/authReducer.ts":"16","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/authActions.ts":"17","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/authActionsTypes.ts":"18","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Upvote.tsx":"19","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/reducers/postReducer.ts":"20","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/postActionsTypes.ts":"21","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/postActions.ts":"22","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/services/getDate.ts":"23","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Publisher.tsx":"24","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/reducers/publisherReducer.ts":"25","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/publisherActionsTypes.ts":"26","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/publisherActions.ts":"27","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/pages/Upvoted.tsx":"28","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/UpvotedNewsfeed.tsx":"29","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/hooks/useLikedPostFetch.ts":"30"},{"size":980,"mtime":1608626137895,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1607440631972,"results":"33","hashOfConfig":"32"},{"size":697,"mtime":1610118241124,"results":"34","hashOfConfig":"32"},{"size":3944,"mtime":1610387916571,"results":"35","hashOfConfig":"32"},{"size":2337,"mtime":1610363986914,"results":"36","hashOfConfig":"32"},{"size":1507,"mtime":1610737203470,"results":"37","hashOfConfig":"32"},{"size":1915,"mtime":1610388228067,"results":"38","hashOfConfig":"32"},{"size":3092,"mtime":1610739003763,"results":"39","hashOfConfig":"32"},{"size":2313,"mtime":1610736602402,"results":"40","hashOfConfig":"32"},{"size":8227,"mtime":1610731041384,"results":"41","hashOfConfig":"32"},{"size":240,"mtime":1610119810873,"results":"42","hashOfConfig":"32"},{"size":1955,"mtime":1610388355622,"results":"43","hashOfConfig":"32"},{"size":340,"mtime":1607885500246,"results":"44","hashOfConfig":"32"},{"size":2614,"mtime":1610737845428,"results":"45","hashOfConfig":"32"},{"size":561,"mtime":1609067332340,"results":"46","hashOfConfig":"32"},{"size":1617,"mtime":1610107267583,"results":"47","hashOfConfig":"32"},{"size":1796,"mtime":1610107248649,"results":"48","hashOfConfig":"32"},{"size":1059,"mtime":1610107287384,"results":"49","hashOfConfig":"32"},{"size":2230,"mtime":1610735215993,"results":"50","hashOfConfig":"32"},{"size":676,"mtime":1608650675289,"results":"51","hashOfConfig":"32"},{"size":607,"mtime":1608650632230,"results":"52","hashOfConfig":"32"},{"size":1368,"mtime":1609687992133,"results":"53","hashOfConfig":"32"},{"size":429,"mtime":1608656671711,"results":"54","hashOfConfig":"32"},{"size":1127,"mtime":1610353614740,"results":"55","hashOfConfig":"32"},{"size":1784,"mtime":1610301876216,"results":"56","hashOfConfig":"32"},{"size":1539,"mtime":1610111773449,"results":"57","hashOfConfig":"32"},{"size":3376,"mtime":1610130697656,"results":"58","hashOfConfig":"32"},{"size":1059,"mtime":1610735996808,"results":"59","hashOfConfig":"32"},{"size":2896,"mtime":1610734976306,"results":"60","hashOfConfig":"32"},{"size":1293,"mtime":1610117410632,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"xr8ynr",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"64"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/index.tsx",[],["144","145"],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/reportWebVitals.ts",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/App.tsx",["146","147","148"],"import React from \"react\";\nimport { Home } from \"./pages/Home\";\nimport { Login } from \"./pages/Login\";\nimport { Profile } from \"./pages/Profile\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RootState from \"./store/reducers/rootReducer\";\nimport { Upvoted } from \"./pages/Upvoted\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/profile\" component={Profile} />\n        <Route path=\"/upvoted\" component={Upvoted} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Newsfeed.tsx",["149","150"],"import React, {\n  useState,\n  useRef,\n  useCallback,\n  useEffect,\n  useContext,\n} from \"react\";\nimport usePostFetch from \"../hooks/usePostFetch\";\nimport { Post } from \"./Post\";\nimport { Tag } from \"./Tag\";\nimport { Upvote } from \"./Upvote\";\nimport { getDate } from \"../services/getDate\";\nimport { useSelector } from \"react-redux\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\nimport { PublisherContext } from \"../pages/Home\";\n\nexport const Newsfeed = (props: any) => {\n  const publisherContext = useContext(PublisherContext);\n  console.log(\n    \"--------------------------------NEWSFEED RERENDERED! ---------------------\"\n  );\n\n  const { user } = useSelector((state: InitialState) => {\n    return state.auth;\n  });\n\n  const [pageNumber, setPageNumber] = useState(1);\n  console.log(\n    `-------Page Number: ${pageNumber} ---------------------------------++`\n  );\n\n  const { loading, error, posts, hasMore } = usePostFetch(\n    pageNumber,\n    publisherContext\n  );\n\n  const [pubs, setPubs] = useState(publisherContext);\n\n  if (pubs.length !== publisherContext.length) {\n    setPageNumber((prevPageNumber) => 1);\n    setPubs(publisherContext);\n  }\n\n  const observer: any = useRef();\n  const lastPostElementRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer && observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        console.log(\"<<<>>>>>>ENTRIES<<<>>>\");\n        console.log(entries);\n        if (entries[0].isIntersecting && hasMore) {\n          console.log(\n            \"|||||||||||||||||||||||||||||| Observer is Visible ||||||||||||||||||||||||||||||||||\"\n          );\n          setPageNumber((prevPageNumber) => prevPageNumber + 1);\n        }\n      });\n      if (node) observer.current.observe(node);\n      console.log(node);\n    },\n    [loading, hasMore]\n  );\n\n  return (\n    <div className=\"container mx-auto bg-gray-900 mt-5\" id=\"newsfeed\">\n      <div className=\"object-center grid grid-cols-1 gap-12 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 mx-auto pb-6 pt-6\">\n        {posts.map((post, index) => {\n          if (posts.length === index + 1) {\n            // Setting the des to 'observer' will make sure it does not get filtered out\n            post.description = \"observer\";\n            const date = getDate(post.created);\n            return (\n              <div\n                key={`${post.id}00000`}\n                ref={lastPostElementRef}\n                className=\"rounded shadow-lg transform transition border border-transparent hover:border-white hover:border-opacity-50 bg-gray-700 mx-auto\"\n              >\n                <div className=\"\">\n                  <a href={post.url} target=\"_blank\" rel=\"noreferrer\">\n                    <img alt={\"Post header\"} src={post.image} />\n                  </a>\n                  <h1>{post.title}</h1>\n                  <h3 className=\"text-white mb-2\">{date}</h3>\n                  <div className=\"px-6 py-4 mb-1\">\n                    {post.category.map((tag: string) => {\n                      return <Tag key={tag} name={tag} />;\n                    })}\n                  </div>\n                  <br />\n                  <div className=\"absolute absolute inset-x-0 bottom-0 bottom-2 m-2\">\n                    <Upvote postId={post.id} upvotes={post.upvotes} />\n                  </div>\n                </div>\n              </div>\n            );\n          }\n          return (\n            <Post\n              key={post.id}\n              title={post.title}\n              url={post.url}\n              image={post.image}\n              category={post.category}\n              postId={post._id}\n              created={post.created}\n              publisher={post.publisher}\n              upvotes={post.upvotes}\n            />\n          );\n        })}\n      </div>\n      <div>{loading && \"Loading...\"}</div>\n      <div>{error && \"Error\"}</div>\n    </div>\n  );\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/hooks/usePostFetch.ts",["151","152","153"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Post } from \"../../../shared/Post\";\nimport { useSelector } from \"react-redux\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\nimport { Publisher } from \"../../../shared/Publisher\";\n\n// Change the string to type post\nexport default function usePostFetch(\n  pageNumber: number,\n  publisherContext: any\n) {\n  console.log(`BACK IN USE_POST_FETCH, PAGE NUM: ${pageNumber}`);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [posts, setPosts] = useState(Array<Post>());\n  const [hasMore, setHasMore] = useState(false);\n\n  // const { publishers } = useSelector((state: InitialState) => {\n  //   return state.publishers;\n  // });\n\n  // const { user } = useSelector((state: InitialState) => {\n  //   return state.auth;\n  // });\n\n  // Get all the names of the users subscribed publishers\n  // let length = 0;\n  // const publisherNames: string[] = [];\n  // if (pubContext !== undefined) {\n  //   for (let i = 0; i < pubContext.length; i++) {\n  //     publisherNames.push(pubContext[i].name);\n  //     length++;\n  //   }\n  // }\n\n  // let newPosts = posts.filter((post) => {\n  //   return publisherNames.includes(post.publisher);\n  // });\n  // setPosts(newPosts);\n\n  useEffect(() => {\n    setPosts([]);\n    console.log(\"POSTS IS NOW EMPTY AGAIN\");\n  }, [publisherContext]);\n\n  // useEffect(() => {\n  //   pageNumber = 1;\n  // }, [publisherContext]);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n\n    axios({\n      method: \"GET\",\n      url: \"post/getposts\",\n      params: { page: pageNumber },\n    })\n      .then((res) => {\n        console.log(res.data);\n        setPosts((prevPosts: any) => {\n          console.log(res.data);\n          const arr: Post[] = [...prevPosts, ...res.data];\n          const map: any = {};\n          for (const post of arr) {\n            map[post.id] = post;\n          }\n          const newArray: Post[] = Object.values(map);\n          return newArray;\n\n          //return [...new Set([...prevPosts, ...res.data.posts])];\n        });\n        setHasMore(res.data.length > 0);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setError(true);\n      });\n  }, [pageNumber, publisherContext]);\n  return { loading, error, posts, hasMore };\n}\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Post.tsx",["154","155","156"],"import React, { useContext } from \"react\";\nimport { Tag } from \"./Tag\";\nimport { Upvote } from \"./Upvote\";\nimport { getDate } from \"../services/getDate\";\nimport { Publisher } from \"./Publisher\";\nimport { PublisherContext } from \"../pages/Home\";\n\nexport const Post = (props: any) => {\n  const date = getDate(props.created);\n  return (\n    <div className=\"rounded shadow-xl transform transition border border-white border-opacity-10 hover:border-opacity-75 bg-gray-700 mx-auto\">\n      <div className=\"p-2\">\n        <a href={props.url} target=\"_blank\" rel=\"noreferrer\">\n          <img\n            alt={\"Post header\"}\n            src={props.image}\n            className=\"rounded border border-black\"\n          />\n\n          <h1 className=\"text-white my-2\">{props.title}</h1>\n          <h3 className=\"text-white mb-2 opacity-75\">{date}</h3>\n          <div className=\"px-6 py-4 mb-1\">\n            {props.category.map((tag: string, index: number) => {\n              // Limits the post to five tags to conserve space\n              if (index < 5) {\n                return <Tag key={tag} name={tag} />;\n              }\n            })}\n          </div>\n          <br />\n        </a>\n        <div className=\"flex justify-between absolute inset-x-0 bottom-0 bottom-2 m-2\">\n          <Upvote\n            postId={props.postId}\n            upvotes={props.upvotes}\n            upvoteCount={props.upvotes.length}\n          />\n          <Publisher publisher={props.publisher} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Navbar.tsx",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Sidebar.tsx",["157","158"],"import React from \"react\";\nimport { Source } from \"./Source\";\nimport \"../sidebar.css\";\nimport { feeds } from \"../constants/feeds\";\nimport { useSelector } from \"react-redux\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\nimport { Publisher } from \"../../../shared/Publisher\";\n\nexport const Sidebar = (props: any) => {\n  const publisherState = useSelector((state: InitialState) => {\n    return state.publishers;\n  });\n\n  const { publishers } = publisherState;\n\n  function compare(a: Publisher, b: Publisher) {\n    if (a.name < b.name) {\n      return -1;\n    }\n    if (a.name > b.name) {\n      return 1;\n    }\n    return 0;\n  }\n\n  feeds.sort(compare);\n\n  // Get all the names of the users subscribed publishers\n  let length = 0;\n  const publisherNames = [];\n  publishers?.sort(compare);\n  if (publishers !== undefined) {\n    for (let i = 0; i < publishers.length; i++) {\n      publisherNames.push(publishers[i].name);\n      length++;\n    }\n  }\n\n  // Get the publishers that the user is NOT subscribed to\n  let nonSubscribed = [];\n  for (let i = 0; i < feeds.length; i++) {\n    if (!publisherNames?.includes(feeds[i].name)) {\n      nonSubscribed.push(feeds[i]);\n    }\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar z-10 mt-11\">\n        <ul className=\"navbar-nav shadow-xl border-r border-black\">\n          <li className=\"logo\">\n            <a href=\"#\" className=\"nav-link\">\n              <span className=\"link-text logo-text\">Sources</span>\n              <svg\n                aria-hidden=\"true\"\n                focusable=\"false\"\n                data-prefix=\"fad\"\n                data-icon=\"angle-double-right\"\n                role=\"img\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 448 512\"\n                className=\"svg-inline--fa fa-angle-double-right fa-w-14 fa-5x\"\n              >\n                <g className=\"fa-group\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M224 273L88.37 409a23.78 23.78 0 0 1-33.8 0L32 386.36a23.94 23.94 0 0 1 0-33.89l96.13-96.37L32 159.73a23.94 23.94 0 0 1 0-33.89l22.44-22.79a23.78 23.78 0 0 1 33.8 0L223.88 239a23.94 23.94 0 0 1 .1 34z\"\n                    className=\"fa-secondary\"\n                  ></path>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M415.89 273L280.34 409a23.77 23.77 0 0 1-33.79 0L224 386.26a23.94 23.94 0 0 1 0-33.89L320.11 256l-96-96.47a23.94 23.94 0 0 1 0-33.89l22.52-22.59a23.77 23.77 0 0 1 33.79 0L416 239a24 24 0 0 1-.11 34z\"\n                    className=\"fa-primary\"\n                  ></path>\n                </g>\n              </svg>\n            </a>\n          </li>\n\n          {publishers !== undefined\n            ? publishers.map((feed: any) => {\n                return <Source key={feed.url} feed={feed} sub={true} />;\n              })\n            : null}\n\n          {nonSubscribed !== undefined &&\n            nonSubscribed.map((feed: any) => {\n              return <Source key={feed.url} feed={feed} sub={false} />;\n            })}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Source.tsx",["159"],"import React, { useRef } from \"react\";\nimport \"../sidebar.css\";\nimport { CgRemove, CgAdd } from \"react-icons/cg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\nimport { removeFeed, addFeed } from \"../store/actions/publisherActions\";\nimport { feeds } from \"../constants/feeds\";\n\nexport const Source = (props: any) => {\n  const dispatch = useDispatch();\n  const userState = useSelector((state: InitialState) => {\n    return state.auth;\n  });\n  const { user, authenticated } = userState;\n\n  const publisherState = useSelector((state: InitialState) => {\n    return state.publishers;\n  });\n\n  const { publishers } = publisherState;\n\n  const feedNameRef = useRef<any>(null);\n\n  const handleClickRemove = (e: any) => {\n    if (user !== undefined && authenticated) {\n      dispatch(\n        removeFeed(publishers, feedNameRef.current.innerText, user.user._id)\n      );\n    } else {\n      // User is not logged in, can't remove feeds\n      console.log(\"Cant remove feed\");\n    }\n  };\n\n  const handleClickAdd = (e: any) => {\n    if (user !== undefined && authenticated) {\n      let feed = feeds.filter((feed) => {\n        return feed.name.localeCompare(feedNameRef.current.innerText) === 0;\n      });\n      dispatch(addFeed(publishers, feed[0], user.user._id));\n    } else {\n      // User is not logged in, can't add feeds\n      console.log(\"Cant add feed\");\n    }\n  };\n\n  return (\n    <li className=\"nav-item\">\n      <a\n        href=\"#\"\n        className={\"nav-link \" + (authenticated ? \"\" : \"inactiveLink\")}\n      >\n        <div className=\"\">\n          <img\n            src={props.feed.image}\n            alt={\"source\"}\n            className=\"svg-inline--fa fa-w-20 fa-5x rounded\"\n          />\n        </div>\n        <span className=\"link-text\" ref={feedNameRef}>\n          {props.feed.name}\n        </span>\n\n        {props.sub ? (\n          <CgRemove\n            className=\"remove-button transform transition duration-300 hover:scale-125\"\n            size=\"1.5em\"\n            onClick={handleClickRemove}\n          />\n        ) : (\n          <CgAdd\n            className=\"add-button transform transition duration-300 hover:scale-125\"\n            size=\"1.5em\"\n            onClick={handleClickAdd}\n          />\n        )}\n      </a>\n    </li>\n  );\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/constants/feeds.ts",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Tag.tsx",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/pages/Home.tsx",["160","161"],"import React, { useEffect } from \"react\";\nimport \"../App.css\";\nimport { Navbar } from \"../components/Navbar\";\nimport { Sidebar } from \"../components/Sidebar\";\nimport { Newsfeed } from \"../components/Newsfeed\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUser } from \"../store/actions/authActions\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\nimport {\n  getAllPublishers,\n  getUsersPublishers,\n} from \"../store/actions/publisherActions\";\nimport { Publisher } from \"../../../shared/Publisher\";\n\nexport const PublisherContext = React.createContext(Array<Publisher>());\n\nexport const Home: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const userState = useSelector((state: InitialState) => {\n    return state.auth;\n  });\n\n  const { user, authenticated } = userState;\n\n  const publisherState = useSelector((state: InitialState) => {\n    return state.publishers;\n  });\n\n  const { publishers, loadedUsersFeeds } = publisherState;\n\n  useEffect(() => {\n    // Check if there's a user but we dont yet have it\n    if (userState && user === undefined) {\n      //&& userState.authenticated\n      dispatch(setUser());\n    }\n    //if (publishers === undefined && user === undefined && !loadedUsersFeeds) {\n    // Load all default publishers into state\n    //dispatch(getAllPublishers());\n    //} else\n    if (authenticated && !loadedUsersFeeds) {\n      // User logged in, load their feeds\n      dispatch(getUsersPublishers(user?.user.sources));\n      console.log(\"IN THE DISPATCH GET USERS PUBLISHERS\");\n      console.log(user?.user.sources);\n    }\n  }, [loadedUsersFeeds, publishers, user]);\n\n  return (\n    <div className=\"App bg-gray-900 min-h-screen\">\n      <PublisherContext.Provider\n        value={publishers ? publishers : Array<Publisher>()}\n      >\n        <Navbar user={authenticated} />\n        <Sidebar user={user} />\n        <Newsfeed user={user} />\n      </PublisherContext.Provider>\n    </div>\n  );\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/pages/Login.tsx",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/pages/Profile.tsx",["162","163","164","165","166"],"import React, { useEffect, useState } from \"react\";\nimport { Navbar } from \"../components/Navbar\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\nimport axios from \"axios\";\nimport { Post as PostT } from \"../../../shared/Post\";\nimport { Post } from \"../components/Post\";\n\nexport const Profile = () => {\n  const dispatch = useDispatch();\n\n  const userState = useSelector((state: InitialState) => {\n    console.log(\"STATEEEEEE\");\n    console.log(state.auth);\n    return state.auth;\n  });\n\n  const { user, authenticated } = userState;\n\n  const publisherState = useSelector((state: InitialState) => {\n    return state.publishers;\n  });\n\n  const { publishers, loadedUsersFeeds } = publisherState;\n\n  const [likedPosts, setLikedPosts] = useState(Array<PostT>());\n\n  // useEffect(() => {\n  //   // Check if there's a user authenticated but we dont yet have it\n  //   if (typeof userState.user === \"undefined\") {\n  //     // && userState.authenticated\n  //     console.log(\"IM IN THE IF\");\n  //     dispatch(setUser());\n  //   }\n  // });\n\n  useEffect(() => {\n    axios({\n      method: \"GET\",\n      url: \"post/getlikedposts\",\n    }).then((res) => {\n      setLikedPosts((prevPosts: any) => {\n        console.log(res.data);\n        const arr: PostT[] = [...prevPosts, ...res.data];\n        const map: any = {};\n        for (const post of arr) {\n          map[post.id] = post;\n        }\n        const newArray: PostT[] = Object.values(map);\n        return newArray;\n      });\n    });\n  }, []);\n\n  if (!authenticated) return <Redirect to=\"/login\" />;\n\n  return (\n    <div className=\"bg-gray-900\">\n      <Navbar user={userState} />\n      <div className=\"flex justify-center min-h-screen shadow-xl\">\n        <div className=\"bg-gray-700 p-5 border border-black sm:w-screen md:w-4/5 lg:w-3/5 xl:w-2/5 \">\n          {user && (\n            <div className=\"flex justify-evenly \">\n              <div className=\"border border-black\">\n                <img\n                  src={user.user.photo}\n                  alt={\"profile\"}\n                  className=\"rounded-full h-36 w-36\"\n                />\n              </div>\n              <div className=\"border border-black\">\n                <h2>{user.user.username}</h2>\n                <h2>{user.user.email}</h2>\n\n                <h2>{`You joined on: ${user.user.joined}`}</h2>\n                <h2>{`You're currently subscribed to ${user.user.sources.length} feeds`}</h2>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/reducers/rootReducer.ts",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/reducers/authReducer.ts",["167","168","169"],"import { Reducer } from \"react\";\nimport { Publisher } from \"../../../../shared/Publisher\";\nimport { User } from \"../../../../shared/User\";\nimport {\n  AuthDispatchTypes,\n  USER_SUCCESS,\n  USER_FAIL,\n  USER_LOADING,\n  REMOVE_FEED_FROM_USER_STATE,\n  ADD_FEED_TO_USER_STATE,\n} from \"../actions/authActionsTypes\";\n\ninterface UserRes {\n  user: User;\n  status: number;\n  authenticated: boolean;\n}\n\nexport interface AuthState {\n  loading: boolean;\n  user: UserRes | undefined;\n  authenticated: boolean;\n}\n\nconst defaultState: AuthState = {\n  loading: false,\n  user: undefined,\n  authenticated: false,\n};\n\nconst authReducer: Reducer<AuthState, AuthDispatchTypes> = (\n  state: AuthState = defaultState,\n  action: AuthDispatchTypes\n) => {\n  switch (action.type) {\n    case USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        user: undefined,\n        authenticated: false,\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n        user: undefined,\n        authenticated: false,\n      };\n    case USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        authenticated: true,\n        user: action.payload,\n      };\n    // case ADD_FEED_TO_USER_STATE:\n    //   return {\n    //     ...state,\n    //     loading: false,\n    //     authenticated: true,\n    //     user: action.payload,\n    //   };\n    // case REMOVE_FEED_FROM_USER_STATE:\n    //   return {\n    //     ...state,\n    //     loading: false,\n    //     authenticated: true,\n    //     user: action.payload,\n    //   };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/authActions.ts",["170","171","172","173"],"import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { Publisher } from \"../../../../shared/Publisher\";\nimport { User } from \"../../../../shared/User\";\nimport {\n  AuthDispatchTypes,\n  USER_LOADING,\n  USER_FAIL,\n  USER_SUCCESS,\n  REMOVE_FEED_FROM_USER_STATE,\n  ADD_FEED_TO_USER_STATE,\n} from \"./authActionsTypes\";\n\nexport const setUser = () => async (dispatch: Dispatch<AuthDispatchTypes>) => {\n  console.log(\"IN THE SETUSER FUNCTION\");\n  try {\n    dispatch({\n      type: USER_LOADING,\n    });\n\n    //http://localhost:5000/\n    const res = await axios.get(\"auth/login/success\");\n\n    dispatch({\n      type: USER_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_FAIL,\n    });\n  }\n};\n\n// export const addFeedToUser = (\n//   user: User,\n//   feeds: Publisher[],\n//   newFeed: Publisher\n// ) => async (dispatch: Dispatch<AuthDispatchTypes>) => {\n//   try {\n//     let newFeeds: Publisher[] = feeds;\n//     newFeeds.push(newFeed);\n\n//     let newUser: User = {\n//       ...user,\n//       sources: newFeeds,\n//     };\n//     dispatch({\n//       type: ADD_FEED_TO_USER_STATE,\n//       payload: newUser,\n//     });\n//   } catch {\n//     console.log(\"Error adding feed to user state\");\n//   }\n// };\n\n// export const removeFeedFromUser = (\n//   user: User,\n//   feeds: any,\n//   newFeed: any\n// ) => async (dispatch: Dispatch<AuthDispatchTypes>) => {\n//   try {\n//     let newFeeds = feeds.filter((feed: any) => {\n//       return feed.name.localeCompare(newFeed) !== 0;\n//     });\n//     let newUser = {\n//       ...user,\n//       sources: newFeeds,\n//     };\n//     dispatch({\n//       type: REMOVE_FEED_FROM_USER_STATE,\n//       payload: newUser,\n//     });\n//   } catch {\n//     console.log(\"Error removing feed from user state\");\n//   }\n// };\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/authActionsTypes.ts",["174"],"import { Publisher } from \"../../../../shared/Publisher\";\nimport { User } from \"../../../../shared/User\";\n\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_FAIL = \"USER_FAIL\";\nexport const USER_SUCCESS = \"USER_SUCCESS\";\nexport const REMOVE_FEED_FROM_USER_STATE = \"REMOVE_FEED_FROM_USER_STATE\";\nexport const ADD_FEED_TO_USER_STATE = \"ADD_FEED_TO_USER_STATE\";\n\ninterface UserLoading {\n  type: typeof USER_LOADING;\n}\n\ninterface UserFail {\n  type: typeof USER_FAIL;\n}\n\ninterface UserSuccess {\n  type: typeof USER_SUCCESS;\n  payload: {\n    user: User;\n    status: number;\n    authenticated: boolean;\n  };\n}\n\n// interface removeFeedFromUserState {\n//   type: typeof REMOVE_FEED_FROM_USER_STATE;\n//   payload: {\n//     user: User;\n//     status: number;\n//     authenticated: boolean;\n//   };\n// }\n\n// interface addFeedToUserState {\n//   type: typeof ADD_FEED_TO_USER_STATE;\n//   payload: {\n//     user: User;\n//   };\n// }\n\nexport type AuthDispatchTypes = UserLoading | UserFail | UserSuccess;\n\n//   | removeFeedFromUserState\n//   | addFeedToUserState;\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Upvote.tsx",["175"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { GrSign } from \"react-icons/gr\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { downvotePost, upvotePost } from \"../store/actions/postActions\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\n\nexport const Upvote = (props: any) => {\n  //console.log(\"UPVOTE COMPONENT PROPS\");\n  //console.log(props);\n\n  const dispatch = useDispatch();\n  const userState = useSelector((state: InitialState) => {\n    return state.auth;\n  });\n  const { user, authenticated } = userState;\n\n  const [upvoted, setUpvoted] = useState(\n    props.upvotes && props.upvotes.includes(user?.user._id)\n  );\n  const [upvoteCount, setUpvoteCount] = useState(props.upvoteCount);\n  const iconRef = useRef<any>(null);\n\n  useEffect(() => {\n    if (upvoted) {\n      iconRef.current.querySelector(\"svg path\").setAttribute(\"fill\", \"red\");\n    } else {\n      iconRef.current.querySelector(\"svg path\").setAttribute(\"fill\", \"none\");\n    }\n  }, [upvoted]);\n\n  const handleClick = (e: any) => {\n    if (user !== undefined) {\n      const userId = user.user._id;\n      if (!upvoted) {\n        //console.log(\"UPVOTE\");\n        //console.log(e.currentTarget);\n        e.currentTarget.querySelector(\"path\").setAttribute(\"fill\", \"red\");\n        setUpvoted(true);\n        setUpvoteCount(upvoteCount + 1);\n        dispatch(upvotePost(props.postId, userId));\n      } else {\n        //console.log(\"DOWNVOTE\");\n        //console.log(e.currentTarget);\n        e.currentTarget.querySelector(\"path\").setAttribute(\"fill\", \"none\");\n        //console.log(\"e.currentTarget AFTER\");\n        //console.log(e.currentTarget);\n        setUpvoted(false);\n        setUpvoteCount(upvoteCount - 1);\n        dispatch(downvotePost(props.postId, userId));\n      }\n    } else {\n      // User is not logged in, cannot perform up/down vote\n    }\n  };\n\n  return (\n    <div className=\"flex items-center\" ref={iconRef}>\n      <GrSign\n        size=\"2em\"\n        className=\"transform transition duration-300 hover:scale-125\"\n        onClick={handleClick}\n      />\n      {/* change inner text to props.upvotes.length */}\n      <div className=\"pl-2 text-lg\">{upvoteCount ? upvoteCount : 0}</div>\n    </div>\n  );\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/reducers/postReducer.ts",["176"],"import { Reducer } from \"react\";\nimport { Post } from \"../../../../shared/Post\";\nimport {\n  DOWNVOTE_FAILURE,\n  DOWNVOTE_SUCCESS,\n  PostDispatchTypes,\n  UPVOTE_FAILURE,\n  UPVOTE_SUCCESS,\n} from \"../actions/postActionsTypes\";\n\nexport interface PostState {\n  postId: string | undefined;\n}\n\nconst defaultState: PostState = {\n  postId: undefined,\n};\n\nconst postReducer: Reducer<PostState, PostDispatchTypes> = (\n  state: PostState = defaultState,\n  action: PostDispatchTypes\n) => {\n  switch (action.type) {\n    case UPVOTE_SUCCESS:\n    case UPVOTE_FAILURE:\n    case DOWNVOTE_SUCCESS:\n    case DOWNVOTE_FAILURE:\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/postActionsTypes.ts",["177"],"import { Post } from \"../../../../shared/Post\";\n\nexport const UPVOTE_SUCCESS = \"UPVOTE_SUCCESS\";\nexport const UPVOTE_FAILURE = \"UPVOTE_FAILURE\";\nexport const DOWNVOTE_SUCCESS = \"DOWNVOTE_SUCCESS\";\nexport const DOWNVOTE_FAILURE = \"DOWNVOTE_FAILURE\";\n\ninterface UpvoteSuccess {\n  type: typeof UPVOTE_SUCCESS;\n}\n\ninterface UpvoteFailure {\n  type: typeof UPVOTE_FAILURE;\n}\n\ninterface DownvoteSuccess {\n  type: typeof DOWNVOTE_SUCCESS;\n}\n\ninterface DownvoteFailure {\n  type: typeof DOWNVOTE_FAILURE;\n}\n\nexport type PostDispatchTypes =\n  | UpvoteSuccess\n  | UpvoteFailure\n  | DownvoteSuccess\n  | DownvoteFailure;\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/postActions.ts",["178"],"import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  UPVOTE_SUCCESS,\n  UPVOTE_FAILURE,\n  DOWNVOTE_SUCCESS,\n  DOWNVOTE_FAILURE,\n  PostDispatchTypes,\n} from \"./postActionsTypes\";\nimport { Post } from \"../../../../shared/Post\";\n\nexport const upvotePost = (postId: string, userId: string) => async (\n  dispatch: Dispatch<PostDispatchTypes>\n) => {\n  console.log(\"IN THE UPVOTE_POST FUNCTION\");\n  try {\n    axios({\n      method: \"POST\",\n      url: \"post/upvotepost\",\n      params: { postId, userId },\n    })\n      .then((res) => {\n        dispatch({\n          type: UPVOTE_SUCCESS,\n        });\n      })\n      .catch((err) =>\n        console.log(`Error sending axios reguest (upvoting post): ${err}`)\n      );\n  } catch (error) {\n    dispatch({\n      type: UPVOTE_FAILURE,\n    });\n  }\n};\n\nexport const downvotePost = (postId: string, userId: string) => async (\n  dispatch: Dispatch<PostDispatchTypes>\n) => {\n  console.log(\"IN THE DOWNVOTE_POST FUNCTION\");\n  try {\n    axios({\n      method: \"POST\",\n      url: \"post/downvotepost\",\n      params: { postId, userId },\n    })\n      .then((res) => {\n        dispatch({\n          type: DOWNVOTE_SUCCESS,\n        });\n      })\n      .catch((err) =>\n        console.log(`Error sending axios reguest (downvoting post): ${err}`)\n      );\n  } catch (error) {\n    dispatch({\n      type: DOWNVOTE_FAILURE,\n    });\n  }\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/services/getDate.ts",["179"],"export const getDate = (date: any) => {\n  const d = parseInt(date);\n  let [month, day, year] = new Date(d).toLocaleDateString(\"en-US\").split(\"/\");\n  let [tMonth, tDay, tYear] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  const formattedDate = `${month}/${day}/${year}`;\n  const todaysDate = `${tMonth}/${tDay}/${tYear}`;\n\n  const finalDate = formattedDate == todaysDate ? \"Today\" : formattedDate;\n  return finalDate;\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/Publisher.tsx",["180","181","182"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { feeds } from \"../constants/feeds\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\n\n// Change feeds to the feeds loaded into state\nexport const Publisher = (props: any) => {\n  const [image, setImage] = useState(\"\");\n  const publisherState = useSelector((state: InitialState) => {\n    return state.publishers;\n  });\n\n  const publishers = feeds;\n  //const publishers = publisherState.publishers;\n\n  useEffect(() => {\n    publishers?.map((publisher) => {\n      if (publisher.name.localeCompare(props.publisher) === 0) {\n        //console.log(`We found a match: ${publisher.name} = ${props.publisher}`);\n        //console.log(`Publisher Image: ${publisher.image}`);\n        setImage(publisher.image);\n      }\n    });\n  }, [image, publishers]);\n\n  //user.user.sources\n\n  //console.log(`ImagePath: ${image}`);\n  return (\n    <div className=\"flex items-center\">\n      <img\n        src={image}\n        alt=\"publisher\"\n        className=\"w-6 h-6 rounded-full border border-black shadow-lg\"\n      />\n    </div>\n  );\n};\n",["183","184"],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/reducers/publisherReducer.ts",["185","186"],"import { Reducer } from \"react\";\nimport {\n  GET_PUBLISHERS_SUCCESS,\n  GET_PUBLISHERS_FAILURE,\n  PublisherDispatchTypes,\n  GET_USERS_PUBLISHERS_FAILURE,\n  GET_USERS_PUBLISHERS_SUCCESS,\n  REMOVE_FEED_SUCCESS,\n  REMOVE_FEED_FAILURE,\n  ADD_FEED_SUCCESS,\n  ADD_FEED_FAILURE,\n} from \"../actions/publisherActionsTypes\";\nimport { Publisher } from \"../../../../shared/Publisher\";\n\ninterface PublisherResponse {\n  publishers: Publisher[];\n}\n\nexport interface PublisherState {\n  publishers: Publisher[] | undefined;\n  loadedUsersFeeds: boolean;\n  feedCount: number;\n}\n\nconst defaultState: PublisherState = {\n  publishers: undefined,\n  loadedUsersFeeds: false,\n  feedCount: 0,\n};\n\nconst publisherReducer = (\n  state: PublisherState = defaultState,\n  action: PublisherDispatchTypes\n) => {\n  switch (action.type) {\n    case GET_PUBLISHERS_SUCCESS:\n      return {\n        ...state,\n        publishers: action.payload,\n      };\n    case GET_PUBLISHERS_FAILURE:\n      return state;\n    case GET_USERS_PUBLISHERS_SUCCESS:\n      return {\n        ...state,\n        publishers: action.payload,\n        loadedUsersFeeds: true,\n      };\n    case GET_USERS_PUBLISHERS_FAILURE:\n      return {\n        ...state,\n        loadedUsersFeeds: false,\n      };\n    case REMOVE_FEED_SUCCESS:\n      const newState = {\n        ...state,\n        publishers: action.payload,\n      };\n      return newState;\n    case REMOVE_FEED_FAILURE:\n      return state;\n    case ADD_FEED_SUCCESS:\n      let pubs = state.publishers || [];\n      const newState2 = {\n        ...state,\n        publishers: [...pubs, action.payload],\n      };\n      return newState2;\n    case ADD_FEED_FAILURE:\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default publisherReducer;\n\n// Reducer<PublisherState, PublisherDispatchTypes>\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/publisherActionsTypes.ts",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/store/actions/publisherActions.ts",["187","188","189"],"import axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { Publisher } from \"../../../../shared/Publisher\";\nimport { InitialState } from \"../reducers/rootReducer\";\nimport {\n  GET_PUBLISHERS_SUCCESS,\n  GET_PUBLISHERS_FAILURE,\n  PublisherDispatchTypes,\n  GET_USERS_PUBLISHERS_SUCCESS,\n  GET_USERS_PUBLISHERS_FAILURE,\n  REMOVE_FEED_SUCCESS,\n  REMOVE_FEED_FAILURE,\n  ADD_FEED_SUCCESS,\n  ADD_FEED_FAILURE,\n} from \"./publisherActionsTypes\";\n\nexport const getAllPublishers = () => async (\n  dispatch: Dispatch<PublisherDispatchTypes>\n) => {\n  console.log(\"IN THE GET_ALL_PUBLISHERS FUNCTION\");\n  try {\n    axios({\n      method: \"GET\",\n      url: \"publisher/getpublishers\",\n    })\n      .then((res) => {\n        dispatch({\n          type: GET_PUBLISHERS_SUCCESS,\n          payload: res.data,\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: GET_PUBLISHERS_FAILURE,\n        });\n      });\n  } catch (error) {\n    dispatch({\n      type: GET_PUBLISHERS_FAILURE,\n    });\n  }\n};\n\nexport const getUsersPublishers = (usersFeeds: any) => async (\n  dispatch: Dispatch<PublisherDispatchTypes>\n) => {\n  console.log(\"IN THE GET_USERS_PUBLISHERS FUNCTION\");\n  try {\n    dispatch({\n      type: GET_USERS_PUBLISHERS_SUCCESS,\n      payload: usersFeeds,\n    });\n  } catch {\n    dispatch({\n      type: GET_USERS_PUBLISHERS_FAILURE,\n    });\n  }\n};\n\nexport const removeFeed = (allFeeds: any, feedName: any, userId: any) => async (\n  dispatch: Dispatch<PublisherDispatchTypes>\n) => {\n  console.log(\"IN THE REMOVE_FEED FUNCTION\");\n  try {\n    axios({\n      method: \"PUT\",\n      url: \"users/removepublisher\",\n      params: { publisher: feedName, userId },\n    })\n      .then((res) => {\n        let newAllFeeds = allFeeds.filter((feed: any) => {\n          return feed.name.localeCompare(feedName) !== 0;\n        });\n\n        allFeeds = newAllFeeds;\n\n        console.log(`Feed was removed, ${res}`);\n        dispatch({\n          type: REMOVE_FEED_SUCCESS,\n          payload: allFeeds,\n        });\n      })\n      .catch((err) => {\n        console.log(`Error removing feed, ${err}`);\n        dispatch({\n          type: REMOVE_FEED_FAILURE,\n        });\n      });\n  } catch {\n    dispatch({ type: REMOVE_FEED_FAILURE });\n    console.log(\"Caught error while removing feed\");\n  }\n};\n\nexport const addFeed = (allFeeds: any, feed: any, userId: any) => async (\n  dispatch: Dispatch<PublisherDispatchTypes>\n) => {\n  console.log(\"IN THE ADD_FEED FUNCTION\");\n  try {\n    axios({\n      method: \"PUT\",\n      url: \"users/addpublisher\",\n      params: { publisher: feed, userId },\n    })\n      .then((res) => {\n        console.log(\"ADD FEED RES------->\");\n        console.log(res);\n\n        console.log(\"FEED IM ABOUT TO ADD!!!!!!!!!\");\n        console.log(feed);\n\n        //let feeds = allFeeds.concat(feed);\n        //allFeeds = feeds;\n\n        console.log(`Feed was added, ${res}`);\n        dispatch({\n          type: ADD_FEED_SUCCESS,\n          payload: {\n            name: feed.name,\n            url: feed.url,\n            image: feed.image,\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(`Error adding feed, ${err}`);\n        dispatch({\n          type: ADD_FEED_FAILURE,\n        });\n      });\n  } catch {\n    dispatch({ type: ADD_FEED_FAILURE });\n    console.log(\"Caught error while adding feed\");\n  }\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/pages/Upvoted.tsx",["190","191","192","193"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Publisher } from \"../../../shared/Publisher\";\nimport { Navbar } from \"../components/Navbar\";\nimport { Sidebar } from \"../components/Sidebar\";\nimport { UpvotedNewsfeed } from \"../components/UpvotedNewsfeed\";\nimport { setUser } from \"../store/actions/authActions\";\nimport { getUsersPublishers } from \"../store/actions/publisherActions\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\n\nexport const Upvoted = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Check if there's a user but we dont yet have it\n    if (userState && user === undefined) {\n      //&& userState.authenticated\n      dispatch(setUser());\n    }\n  }, []);\n\n  const userState = useSelector((state: InitialState) => {\n    return state.auth;\n  });\n\n  const { user, authenticated } = userState;\n\n  return (\n    <div className=\"App bg-gray-900 min-h-screen\">\n      <Navbar user={authenticated} />\n      <UpvotedNewsfeed user={user} />\n    </div>\n  );\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/components/UpvotedNewsfeed.tsx",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/src/client/src/hooks/useLikedPostFetch.ts",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":6,"column":10,"nodeType":"200","messageId":"201","endLine":6,"endColumn":21},{"ruleId":"198","severity":1,"message":"202","line":6,"column":23,"nodeType":"200","messageId":"201","endLine":6,"endColumn":34},{"ruleId":"198","severity":1,"message":"203","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":17},{"ruleId":"198","severity":1,"message":"204","line":5,"column":3,"nodeType":"200","messageId":"201","endLine":5,"endColumn":12},{"ruleId":"198","severity":1,"message":"205","line":23,"column":11,"nodeType":"200","messageId":"201","endLine":23,"endColumn":15},{"ruleId":"198","severity":1,"message":"202","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":21},{"ruleId":"198","severity":1,"message":"206","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":22},{"ruleId":"198","severity":1,"message":"207","line":6,"column":10,"nodeType":"200","messageId":"201","endLine":6,"endColumn":19},{"ruleId":"198","severity":1,"message":"208","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":27},{"ruleId":"198","severity":1,"message":"209","line":6,"column":10,"nodeType":"200","messageId":"201","endLine":6,"endColumn":26},{"ruleId":"210","severity":1,"message":"211","line":23,"column":62,"nodeType":"212","messageId":"213","endLine":23,"endColumn":64},{"ruleId":"198","severity":1,"message":"214","line":35,"column":7,"nodeType":"200","messageId":"201","endLine":35,"endColumn":13},{"ruleId":"215","severity":1,"message":"216","line":52,"column":13,"nodeType":"217","endLine":52,"endColumn":46},{"ruleId":"215","severity":1,"message":"216","line":49,"column":7,"nodeType":"217","endLine":52,"endColumn":8},{"ruleId":"198","severity":1,"message":"218","line":10,"column":3,"nodeType":"200","messageId":"201","endLine":10,"endColumn":19},{"ruleId":"219","severity":1,"message":"220","line":48,"column":6,"nodeType":"221","endLine":48,"endColumn":42,"suggestions":"222"},{"ruleId":"198","severity":1,"message":"223","line":8,"column":10,"nodeType":"200","messageId":"201","endLine":8,"endColumn":14},{"ruleId":"198","severity":1,"message":"224","line":11,"column":9,"nodeType":"200","messageId":"201","endLine":11,"endColumn":17},{"ruleId":"198","severity":1,"message":"225","line":25,"column":11,"nodeType":"200","messageId":"201","endLine":25,"endColumn":21},{"ruleId":"198","severity":1,"message":"226","line":25,"column":23,"nodeType":"200","messageId":"201","endLine":25,"endColumn":39},{"ruleId":"198","severity":1,"message":"227","line":27,"column":10,"nodeType":"200","messageId":"201","endLine":27,"endColumn":20},{"ruleId":"198","severity":1,"message":"207","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":19},{"ruleId":"198","severity":1,"message":"228","line":9,"column":3,"nodeType":"200","messageId":"201","endLine":9,"endColumn":30},{"ruleId":"198","severity":1,"message":"229","line":10,"column":3,"nodeType":"200","messageId":"201","endLine":10,"endColumn":25},{"ruleId":"198","severity":1,"message":"207","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":19},{"ruleId":"198","severity":1,"message":"230","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":14},{"ruleId":"198","severity":1,"message":"228","line":10,"column":3,"nodeType":"200","messageId":"201","endLine":10,"endColumn":30},{"ruleId":"198","severity":1,"message":"229","line":11,"column":3,"nodeType":"200","messageId":"201","endLine":11,"endColumn":25},{"ruleId":"198","severity":1,"message":"207","line":1,"column":10,"nodeType":"200","messageId":"201","endLine":1,"endColumn":19},{"ruleId":"198","severity":1,"message":"231","line":15,"column":17,"nodeType":"200","messageId":"201","endLine":15,"endColumn":30},{"ruleId":"198","severity":1,"message":"223","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":14},{"ruleId":"198","severity":1,"message":"223","line":1,"column":10,"nodeType":"200","messageId":"201","endLine":1,"endColumn":14},{"ruleId":"198","severity":1,"message":"223","line":10,"column":10,"nodeType":"200","messageId":"201","endLine":10,"endColumn":14},{"ruleId":"232","severity":1,"message":"233","line":8,"column":35,"nodeType":"234","messageId":"235","endLine":8,"endColumn":37},{"ruleId":"198","severity":1,"message":"236","line":9,"column":9,"nodeType":"200","messageId":"201","endLine":9,"endColumn":23},{"ruleId":"210","severity":1,"message":"237","line":17,"column":33,"nodeType":"212","messageId":"238","endLine":17,"endColumn":35},{"ruleId":"219","severity":1,"message":"239","line":24,"column":6,"nodeType":"221","endLine":24,"endColumn":25,"suggestions":"240"},{"ruleId":"194","replacedBy":"241"},{"ruleId":"196","replacedBy":"242"},{"ruleId":"198","severity":1,"message":"243","line":1,"column":10,"nodeType":"200","messageId":"201","endLine":1,"endColumn":17},{"ruleId":"198","severity":1,"message":"244","line":15,"column":11,"nodeType":"200","messageId":"201","endLine":15,"endColumn":28},{"ruleId":"198","severity":1,"message":"202","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":21},{"ruleId":"198","severity":1,"message":"207","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":19},{"ruleId":"198","severity":1,"message":"206","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":22},{"ruleId":"198","severity":1,"message":"207","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":19},{"ruleId":"198","severity":1,"message":"245","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":17},{"ruleId":"198","severity":1,"message":"246","line":8,"column":10,"nodeType":"200","messageId":"201","endLine":8,"endColumn":28},{"ruleId":"219","severity":1,"message":"247","line":19,"column":6,"nodeType":"221","endLine":19,"endColumn":8,"suggestions":"248"},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'RootState' is defined but never used.","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'InitialState' is defined but never used.","'Publisher' is defined but never used.","'useContext' is defined but never used.","'PublisherContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'length' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'getAllPublishers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authenticated', 'dispatch', and 'userState'. Either include them or remove the dependency array.","ArrayExpression",["251"],"'Post' is defined but never used.","'dispatch' is assigned a value but never used.","'publishers' is assigned a value but never used.","'loadedUsersFeeds' is assigned a value but never used.","'likedPosts' is assigned a value but never used.","'REMOVE_FEED_FROM_USER_STATE' is defined but never used.","'ADD_FEED_TO_USER_STATE' is defined but never used.","'User' is defined but never used.","'authenticated' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'publisherState' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'props.publisher'. Either include it or remove the dependency array.",["252"],["249"],["250"],"'Reducer' is defined but never used.","'PublisherResponse' is defined but never used.","'Sidebar' is defined but never used.","'getUsersPublishers' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'user', and 'userState'. Either include them or remove the dependency array.",["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [authenticated, dispatch, loadedUsersFeeds, publishers, user, userState]",{"range":"260","text":"261"},"Update the dependencies array to be: [image, props.publisher, publishers]",{"range":"262","text":"263"},"Update the dependencies array to be: [dispatch, user, userState]",{"range":"264","text":"265"},[1592,1628],"[authenticated, dispatch, loadedUsersFeeds, publishers, user, userState]",[836,855],"[image, props.publisher, publishers]",[761,763],"[dispatch, user, userState]"]