[{"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/index.tsx":"1","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/reportWebVitals.ts":"2","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/App.tsx":"3","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/reducers/rootReducer.ts":"4","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/reducers/postReducer.ts":"5","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/reducers/publisherReducer.ts":"6","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/reducers/authReducer.ts":"7","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/pages/Profile.tsx":"8","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/pages/Upvoted.tsx":"9","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/pages/Home.tsx":"10","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/pages/Login.tsx":"11","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/authActionsTypes.ts":"12","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/publisherActionsTypes.ts":"13","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/postActionsTypes.ts":"14","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/authActions.ts":"15","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/publisherActions.ts":"16","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/UpvotedNewsfeed.tsx":"17","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Navbar.tsx":"18","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Sidebar.tsx":"19","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Newsfeed.tsx":"20","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/hooks/usePostFetch.ts":"21","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/hooks/useLikedPostFetch.ts":"22","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/services/getDate.ts":"23","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/constants/feeds.ts":"24","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Tag.tsx":"25","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Post.tsx":"26","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Source.tsx":"27","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Upvote.tsx":"28","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/postActions.ts":"29","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Publisher.tsx":"30"},{"size":980,"mtime":1608626137895,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1607440631972,"results":"33","hashOfConfig":"32"},{"size":717,"mtime":1611323509370,"results":"34","hashOfConfig":"32"},{"size":561,"mtime":1609067332340,"results":"35","hashOfConfig":"32"},{"size":676,"mtime":1611064731503,"results":"36","hashOfConfig":"32"},{"size":1784,"mtime":1611064731989,"results":"37","hashOfConfig":"32"},{"size":1617,"mtime":1611064731990,"results":"38","hashOfConfig":"32"},{"size":2214,"mtime":1611339749192,"results":"39","hashOfConfig":"32"},{"size":1059,"mtime":1611064730502,"results":"40","hashOfConfig":"32"},{"size":2494,"mtime":1611339976017,"results":"41","hashOfConfig":"32"},{"size":1668,"mtime":1611339282008,"results":"42","hashOfConfig":"32"},{"size":1059,"mtime":1611064731989,"results":"43","hashOfConfig":"32"},{"size":1539,"mtime":1611064731503,"results":"44","hashOfConfig":"32"},{"size":607,"mtime":1611064731990,"results":"45","hashOfConfig":"32"},{"size":1796,"mtime":1611064731503,"results":"46","hashOfConfig":"32"},{"size":3376,"mtime":1611064731503,"results":"47","hashOfConfig":"32"},{"size":2896,"mtime":1610734976306,"results":"48","hashOfConfig":"32"},{"size":1915,"mtime":1610388228067,"results":"49","hashOfConfig":"32"},{"size":3150,"mtime":1611338874361,"results":"50","hashOfConfig":"32"},{"size":3975,"mtime":1611340031846,"results":"51","hashOfConfig":"32"},{"size":2337,"mtime":1611064730502,"results":"52","hashOfConfig":"32"},{"size":1293,"mtime":1611064730502,"results":"53","hashOfConfig":"32"},{"size":429,"mtime":1608656671711,"results":"54","hashOfConfig":"32"},{"size":6234,"mtime":1611322945577,"results":"55","hashOfConfig":"32"},{"size":240,"mtime":1610119810873,"results":"56","hashOfConfig":"32"},{"size":1533,"mtime":1611340063848,"results":"57","hashOfConfig":"32"},{"size":2313,"mtime":1611338847256,"results":"58","hashOfConfig":"32"},{"size":2230,"mtime":1610735215993,"results":"59","hashOfConfig":"32"},{"size":1368,"mtime":1611064731503,"results":"60","hashOfConfig":"32"},{"size":1143,"mtime":1611340144730,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"s753k5",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/index.tsx",[],["136","137"],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/reportWebVitals.ts",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/App.tsx",["138","139","140"],"import React from \"react\";\nimport { Home } from \"./pages/Home\";\nimport { Login } from \"./pages/Login\";\nimport { Profile } from \"./pages/Profile\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RootState from \"./store/reducers/rootReducer\";\nimport { Upvoted } from \"./pages/Upvoted\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/profile\" component={Profile} />\n        <Route path=\"/upvoted\" component={Upvoted} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/reducers/rootReducer.ts",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/reducers/postReducer.ts",["141"],"import { Reducer } from \"react\";\nimport { Post } from \"../../../../shared/Post\";\nimport {\n  DOWNVOTE_FAILURE,\n  DOWNVOTE_SUCCESS,\n  PostDispatchTypes,\n  UPVOTE_FAILURE,\n  UPVOTE_SUCCESS,\n} from \"../actions/postActionsTypes\";\n\nexport interface PostState {\n  postId: string | undefined;\n}\n\nconst defaultState: PostState = {\n  postId: undefined,\n};\n\nconst postReducer: Reducer<PostState, PostDispatchTypes> = (\n  state: PostState = defaultState,\n  action: PostDispatchTypes\n) => {\n  switch (action.type) {\n    case UPVOTE_SUCCESS:\n    case UPVOTE_FAILURE:\n    case DOWNVOTE_SUCCESS:\n    case DOWNVOTE_FAILURE:\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/reducers/publisherReducer.ts",["142","143"],"import { Reducer } from \"react\";\nimport {\n  GET_PUBLISHERS_SUCCESS,\n  GET_PUBLISHERS_FAILURE,\n  PublisherDispatchTypes,\n  GET_USERS_PUBLISHERS_FAILURE,\n  GET_USERS_PUBLISHERS_SUCCESS,\n  REMOVE_FEED_SUCCESS,\n  REMOVE_FEED_FAILURE,\n  ADD_FEED_SUCCESS,\n  ADD_FEED_FAILURE,\n} from \"../actions/publisherActionsTypes\";\nimport { Publisher } from \"../../../../shared/Publisher\";\n\ninterface PublisherResponse {\n  publishers: Publisher[];\n}\n\nexport interface PublisherState {\n  publishers: Publisher[] | undefined;\n  loadedUsersFeeds: boolean;\n  feedCount: number;\n}\n\nconst defaultState: PublisherState = {\n  publishers: undefined,\n  loadedUsersFeeds: false,\n  feedCount: 0,\n};\n\nconst publisherReducer = (\n  state: PublisherState = defaultState,\n  action: PublisherDispatchTypes\n) => {\n  switch (action.type) {\n    case GET_PUBLISHERS_SUCCESS:\n      return {\n        ...state,\n        publishers: action.payload,\n      };\n    case GET_PUBLISHERS_FAILURE:\n      return state;\n    case GET_USERS_PUBLISHERS_SUCCESS:\n      return {\n        ...state,\n        publishers: action.payload,\n        loadedUsersFeeds: true,\n      };\n    case GET_USERS_PUBLISHERS_FAILURE:\n      return {\n        ...state,\n        loadedUsersFeeds: false,\n      };\n    case REMOVE_FEED_SUCCESS:\n      const newState = {\n        ...state,\n        publishers: action.payload,\n      };\n      return newState;\n    case REMOVE_FEED_FAILURE:\n      return state;\n    case ADD_FEED_SUCCESS:\n      let pubs = state.publishers || [];\n      const newState2 = {\n        ...state,\n        publishers: [...pubs, action.payload],\n      };\n      return newState2;\n    case ADD_FEED_FAILURE:\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default publisherReducer;\n\n// Reducer<PublisherState, PublisherDispatchTypes>\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/reducers/authReducer.ts",["144","145","146"],"import { Reducer } from \"react\";\nimport { Publisher } from \"../../../../shared/Publisher\";\nimport { User } from \"../../../../shared/User\";\nimport {\n  AuthDispatchTypes,\n  USER_SUCCESS,\n  USER_FAIL,\n  USER_LOADING,\n  REMOVE_FEED_FROM_USER_STATE,\n  ADD_FEED_TO_USER_STATE,\n} from \"../actions/authActionsTypes\";\n\ninterface UserRes {\n  user: User;\n  status: number;\n  authenticated: boolean;\n}\n\nexport interface AuthState {\n  loading: boolean;\n  user: UserRes | undefined;\n  authenticated: boolean;\n}\n\nconst defaultState: AuthState = {\n  loading: false,\n  user: undefined,\n  authenticated: false,\n};\n\nconst authReducer: Reducer<AuthState, AuthDispatchTypes> = (\n  state: AuthState = defaultState,\n  action: AuthDispatchTypes\n) => {\n  switch (action.type) {\n    case USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        user: undefined,\n        authenticated: false,\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n        user: undefined,\n        authenticated: false,\n      };\n    case USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        authenticated: true,\n        user: action.payload,\n      };\n    // case ADD_FEED_TO_USER_STATE:\n    //   return {\n    //     ...state,\n    //     loading: false,\n    //     authenticated: true,\n    //     user: action.payload,\n    //   };\n    // case REMOVE_FEED_FROM_USER_STATE:\n    //   return {\n    //     ...state,\n    //     loading: false,\n    //     authenticated: true,\n    //     user: action.payload,\n    //   };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/pages/Profile.tsx",["147","148","149","150","151"],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/pages/Upvoted.tsx",["152","153","154","155"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Publisher } from \"../../../shared/Publisher\";\nimport { Navbar } from \"../components/Navbar\";\nimport { Sidebar } from \"../components/Sidebar\";\nimport { UpvotedNewsfeed } from \"../components/UpvotedNewsfeed\";\nimport { setUser } from \"../store/actions/authActions\";\nimport { getUsersPublishers } from \"../store/actions/publisherActions\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\n\nexport const Upvoted = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Check if there's a user but we dont yet have it\n    if (userState && user === undefined) {\n      //&& userState.authenticated\n      dispatch(setUser());\n    }\n  }, []);\n\n  const userState = useSelector((state: InitialState) => {\n    return state.auth;\n  });\n\n  const { user, authenticated } = userState;\n\n  return (\n    <div className=\"App bg-gray-900 min-h-screen\">\n      <Navbar user={authenticated} />\n      <UpvotedNewsfeed user={user} />\n    </div>\n  );\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/pages/Home.tsx",["156","157"],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/pages/Login.tsx",["158"],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/authActionsTypes.ts",["159"],"import { Publisher } from \"../../../../shared/Publisher\";\nimport { User } from \"../../../../shared/User\";\n\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_FAIL = \"USER_FAIL\";\nexport const USER_SUCCESS = \"USER_SUCCESS\";\nexport const REMOVE_FEED_FROM_USER_STATE = \"REMOVE_FEED_FROM_USER_STATE\";\nexport const ADD_FEED_TO_USER_STATE = \"ADD_FEED_TO_USER_STATE\";\n\ninterface UserLoading {\n  type: typeof USER_LOADING;\n}\n\ninterface UserFail {\n  type: typeof USER_FAIL;\n}\n\ninterface UserSuccess {\n  type: typeof USER_SUCCESS;\n  payload: {\n    user: User;\n    status: number;\n    authenticated: boolean;\n  };\n}\n\n// interface removeFeedFromUserState {\n//   type: typeof REMOVE_FEED_FROM_USER_STATE;\n//   payload: {\n//     user: User;\n//     status: number;\n//     authenticated: boolean;\n//   };\n// }\n\n// interface addFeedToUserState {\n//   type: typeof ADD_FEED_TO_USER_STATE;\n//   payload: {\n//     user: User;\n//   };\n// }\n\nexport type AuthDispatchTypes = UserLoading | UserFail | UserSuccess;\n\n//   | removeFeedFromUserState\n//   | addFeedToUserState;\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/publisherActionsTypes.ts",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/postActionsTypes.ts",["160"],"import { Post } from \"../../../../shared/Post\";\n\nexport const UPVOTE_SUCCESS = \"UPVOTE_SUCCESS\";\nexport const UPVOTE_FAILURE = \"UPVOTE_FAILURE\";\nexport const DOWNVOTE_SUCCESS = \"DOWNVOTE_SUCCESS\";\nexport const DOWNVOTE_FAILURE = \"DOWNVOTE_FAILURE\";\n\ninterface UpvoteSuccess {\n  type: typeof UPVOTE_SUCCESS;\n}\n\ninterface UpvoteFailure {\n  type: typeof UPVOTE_FAILURE;\n}\n\ninterface DownvoteSuccess {\n  type: typeof DOWNVOTE_SUCCESS;\n}\n\ninterface DownvoteFailure {\n  type: typeof DOWNVOTE_FAILURE;\n}\n\nexport type PostDispatchTypes =\n  | UpvoteSuccess\n  | UpvoteFailure\n  | DownvoteSuccess\n  | DownvoteFailure;\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/authActions.ts",["161","162","163","164"],"import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { Publisher } from \"../../../../shared/Publisher\";\nimport { User } from \"../../../../shared/User\";\nimport {\n  AuthDispatchTypes,\n  USER_LOADING,\n  USER_FAIL,\n  USER_SUCCESS,\n  REMOVE_FEED_FROM_USER_STATE,\n  ADD_FEED_TO_USER_STATE,\n} from \"./authActionsTypes\";\n\nexport const setUser = () => async (dispatch: Dispatch<AuthDispatchTypes>) => {\n  console.log(\"IN THE SETUSER FUNCTION\");\n  try {\n    dispatch({\n      type: USER_LOADING,\n    });\n\n    //http://localhost:5000/\n    const res = await axios.get(\"auth/login/success\");\n\n    dispatch({\n      type: USER_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_FAIL,\n    });\n  }\n};\n\n// export const addFeedToUser = (\n//   user: User,\n//   feeds: Publisher[],\n//   newFeed: Publisher\n// ) => async (dispatch: Dispatch<AuthDispatchTypes>) => {\n//   try {\n//     let newFeeds: Publisher[] = feeds;\n//     newFeeds.push(newFeed);\n\n//     let newUser: User = {\n//       ...user,\n//       sources: newFeeds,\n//     };\n//     dispatch({\n//       type: ADD_FEED_TO_USER_STATE,\n//       payload: newUser,\n//     });\n//   } catch {\n//     console.log(\"Error adding feed to user state\");\n//   }\n// };\n\n// export const removeFeedFromUser = (\n//   user: User,\n//   feeds: any,\n//   newFeed: any\n// ) => async (dispatch: Dispatch<AuthDispatchTypes>) => {\n//   try {\n//     let newFeeds = feeds.filter((feed: any) => {\n//       return feed.name.localeCompare(newFeed) !== 0;\n//     });\n//     let newUser = {\n//       ...user,\n//       sources: newFeeds,\n//     };\n//     dispatch({\n//       type: REMOVE_FEED_FROM_USER_STATE,\n//       payload: newUser,\n//     });\n//   } catch {\n//     console.log(\"Error removing feed from user state\");\n//   }\n// };\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/publisherActions.ts",["165","166","167"],"import axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { Publisher } from \"../../../../shared/Publisher\";\nimport { InitialState } from \"../reducers/rootReducer\";\nimport {\n  GET_PUBLISHERS_SUCCESS,\n  GET_PUBLISHERS_FAILURE,\n  PublisherDispatchTypes,\n  GET_USERS_PUBLISHERS_SUCCESS,\n  GET_USERS_PUBLISHERS_FAILURE,\n  REMOVE_FEED_SUCCESS,\n  REMOVE_FEED_FAILURE,\n  ADD_FEED_SUCCESS,\n  ADD_FEED_FAILURE,\n} from \"./publisherActionsTypes\";\n\nexport const getAllPublishers = () => async (\n  dispatch: Dispatch<PublisherDispatchTypes>\n) => {\n  console.log(\"IN THE GET_ALL_PUBLISHERS FUNCTION\");\n  try {\n    axios({\n      method: \"GET\",\n      url: \"publisher/getpublishers\",\n    })\n      .then((res) => {\n        dispatch({\n          type: GET_PUBLISHERS_SUCCESS,\n          payload: res.data,\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: GET_PUBLISHERS_FAILURE,\n        });\n      });\n  } catch (error) {\n    dispatch({\n      type: GET_PUBLISHERS_FAILURE,\n    });\n  }\n};\n\nexport const getUsersPublishers = (usersFeeds: any) => async (\n  dispatch: Dispatch<PublisherDispatchTypes>\n) => {\n  console.log(\"IN THE GET_USERS_PUBLISHERS FUNCTION\");\n  try {\n    dispatch({\n      type: GET_USERS_PUBLISHERS_SUCCESS,\n      payload: usersFeeds,\n    });\n  } catch {\n    dispatch({\n      type: GET_USERS_PUBLISHERS_FAILURE,\n    });\n  }\n};\n\nexport const removeFeed = (allFeeds: any, feedName: any, userId: any) => async (\n  dispatch: Dispatch<PublisherDispatchTypes>\n) => {\n  console.log(\"IN THE REMOVE_FEED FUNCTION\");\n  try {\n    axios({\n      method: \"PUT\",\n      url: \"users/removepublisher\",\n      params: { publisher: feedName, userId },\n    })\n      .then((res) => {\n        let newAllFeeds = allFeeds.filter((feed: any) => {\n          return feed.name.localeCompare(feedName) !== 0;\n        });\n\n        allFeeds = newAllFeeds;\n\n        console.log(`Feed was removed, ${res}`);\n        dispatch({\n          type: REMOVE_FEED_SUCCESS,\n          payload: allFeeds,\n        });\n      })\n      .catch((err) => {\n        console.log(`Error removing feed, ${err}`);\n        dispatch({\n          type: REMOVE_FEED_FAILURE,\n        });\n      });\n  } catch {\n    dispatch({ type: REMOVE_FEED_FAILURE });\n    console.log(\"Caught error while removing feed\");\n  }\n};\n\nexport const addFeed = (allFeeds: any, feed: any, userId: any) => async (\n  dispatch: Dispatch<PublisherDispatchTypes>\n) => {\n  console.log(\"IN THE ADD_FEED FUNCTION\");\n  try {\n    axios({\n      method: \"PUT\",\n      url: \"users/addpublisher\",\n      params: { publisher: feed, userId },\n    })\n      .then((res) => {\n        console.log(\"ADD FEED RES------->\");\n        console.log(res);\n\n        console.log(\"FEED IM ABOUT TO ADD!!!!!!!!!\");\n        console.log(feed);\n\n        //let feeds = allFeeds.concat(feed);\n        //allFeeds = feeds;\n\n        console.log(`Feed was added, ${res}`);\n        dispatch({\n          type: ADD_FEED_SUCCESS,\n          payload: {\n            name: feed.name,\n            url: feed.url,\n            image: feed.image,\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(`Error adding feed, ${err}`);\n        dispatch({\n          type: ADD_FEED_FAILURE,\n        });\n      });\n  } catch {\n    dispatch({ type: ADD_FEED_FAILURE });\n    console.log(\"Caught error while adding feed\");\n  }\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/UpvotedNewsfeed.tsx",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Navbar.tsx",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Sidebar.tsx",["168","169"],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Newsfeed.tsx",["170","171"],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/hooks/usePostFetch.ts",["172","173","174"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Post } from \"../../../shared/Post\";\nimport { useSelector } from \"react-redux\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\nimport { Publisher } from \"../../../shared/Publisher\";\n\n// Change the string to type post\nexport default function usePostFetch(\n  pageNumber: number,\n  publisherContext: any\n) {\n  console.log(`BACK IN USE_POST_FETCH, PAGE NUM: ${pageNumber}`);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [posts, setPosts] = useState(Array<Post>());\n  const [hasMore, setHasMore] = useState(false);\n\n  // const { publishers } = useSelector((state: InitialState) => {\n  //   return state.publishers;\n  // });\n\n  // const { user } = useSelector((state: InitialState) => {\n  //   return state.auth;\n  // });\n\n  // Get all the names of the users subscribed publishers\n  // let length = 0;\n  // const publisherNames: string[] = [];\n  // if (pubContext !== undefined) {\n  //   for (let i = 0; i < pubContext.length; i++) {\n  //     publisherNames.push(pubContext[i].name);\n  //     length++;\n  //   }\n  // }\n\n  // let newPosts = posts.filter((post) => {\n  //   return publisherNames.includes(post.publisher);\n  // });\n  // setPosts(newPosts);\n\n  useEffect(() => {\n    setPosts([]);\n    console.log(\"POSTS IS NOW EMPTY AGAIN\");\n  }, [publisherContext]);\n\n  // useEffect(() => {\n  //   pageNumber = 1;\n  // }, [publisherContext]);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n\n    axios({\n      method: \"GET\",\n      url: \"post/getposts\",\n      params: { page: pageNumber },\n    })\n      .then((res) => {\n        console.log(res.data);\n        setPosts((prevPosts: any) => {\n          console.log(res.data);\n          const arr: Post[] = [...prevPosts, ...res.data];\n          const map: any = {};\n          for (const post of arr) {\n            map[post.id] = post;\n          }\n          const newArray: Post[] = Object.values(map);\n          return newArray;\n\n          //return [...new Set([...prevPosts, ...res.data.posts])];\n        });\n        setHasMore(res.data.length > 0);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setError(true);\n      });\n  }, [pageNumber, publisherContext]);\n  return { loading, error, posts, hasMore };\n}\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/hooks/useLikedPostFetch.ts",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/services/getDate.ts",["175"],"export const getDate = (date: any) => {\n  const d = parseInt(date);\n  let [month, day, year] = new Date(d).toLocaleDateString(\"en-US\").split(\"/\");\n  let [tMonth, tDay, tYear] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  const formattedDate = `${month}/${day}/${year}`;\n  const todaysDate = `${tMonth}/${tDay}/${tYear}`;\n\n  const finalDate = formattedDate == todaysDate ? \"Today\" : formattedDate;\n  return finalDate;\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/constants/feeds.ts",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Tag.tsx",[],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Post.tsx",["176","177","178"],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Source.tsx",["179"],"/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Upvote.tsx",["180"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { GrSign } from \"react-icons/gr\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { downvotePost, upvotePost } from \"../store/actions/postActions\";\nimport { InitialState } from \"../store/reducers/rootReducer\";\n\nexport const Upvote = (props: any) => {\n  //console.log(\"UPVOTE COMPONENT PROPS\");\n  //console.log(props);\n\n  const dispatch = useDispatch();\n  const userState = useSelector((state: InitialState) => {\n    return state.auth;\n  });\n  const { user, authenticated } = userState;\n\n  const [upvoted, setUpvoted] = useState(\n    props.upvotes && props.upvotes.includes(user?.user._id)\n  );\n  const [upvoteCount, setUpvoteCount] = useState(props.upvoteCount);\n  const iconRef = useRef<any>(null);\n\n  useEffect(() => {\n    if (upvoted) {\n      iconRef.current.querySelector(\"svg path\").setAttribute(\"fill\", \"red\");\n    } else {\n      iconRef.current.querySelector(\"svg path\").setAttribute(\"fill\", \"none\");\n    }\n  }, [upvoted]);\n\n  const handleClick = (e: any) => {\n    if (user !== undefined) {\n      const userId = user.user._id;\n      if (!upvoted) {\n        //console.log(\"UPVOTE\");\n        //console.log(e.currentTarget);\n        e.currentTarget.querySelector(\"path\").setAttribute(\"fill\", \"red\");\n        setUpvoted(true);\n        setUpvoteCount(upvoteCount + 1);\n        dispatch(upvotePost(props.postId, userId));\n      } else {\n        //console.log(\"DOWNVOTE\");\n        //console.log(e.currentTarget);\n        e.currentTarget.querySelector(\"path\").setAttribute(\"fill\", \"none\");\n        //console.log(\"e.currentTarget AFTER\");\n        //console.log(e.currentTarget);\n        setUpvoted(false);\n        setUpvoteCount(upvoteCount - 1);\n        dispatch(downvotePost(props.postId, userId));\n      }\n    } else {\n      // User is not logged in, cannot perform up/down vote\n    }\n  };\n\n  return (\n    <div className=\"flex items-center\" ref={iconRef}>\n      <GrSign\n        size=\"2em\"\n        className=\"transform transition duration-300 hover:scale-125\"\n        onClick={handleClick}\n      />\n      {/* change inner text to props.upvotes.length */}\n      <div className=\"pl-2 text-lg\">{upvoteCount ? upvoteCount : 0}</div>\n    </div>\n  );\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/store/actions/postActions.ts",["181"],"import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  UPVOTE_SUCCESS,\n  UPVOTE_FAILURE,\n  DOWNVOTE_SUCCESS,\n  DOWNVOTE_FAILURE,\n  PostDispatchTypes,\n} from \"./postActionsTypes\";\nimport { Post } from \"../../../../shared/Post\";\n\nexport const upvotePost = (postId: string, userId: string) => async (\n  dispatch: Dispatch<PostDispatchTypes>\n) => {\n  console.log(\"IN THE UPVOTE_POST FUNCTION\");\n  try {\n    axios({\n      method: \"POST\",\n      url: \"post/upvotepost\",\n      params: { postId, userId },\n    })\n      .then((res) => {\n        dispatch({\n          type: UPVOTE_SUCCESS,\n        });\n      })\n      .catch((err) =>\n        console.log(`Error sending axios reguest (upvoting post): ${err}`)\n      );\n  } catch (error) {\n    dispatch({\n      type: UPVOTE_FAILURE,\n    });\n  }\n};\n\nexport const downvotePost = (postId: string, userId: string) => async (\n  dispatch: Dispatch<PostDispatchTypes>\n) => {\n  console.log(\"IN THE DOWNVOTE_POST FUNCTION\");\n  try {\n    axios({\n      method: \"POST\",\n      url: \"post/downvotepost\",\n      params: { postId, userId },\n    })\n      .then((res) => {\n        dispatch({\n          type: DOWNVOTE_SUCCESS,\n        });\n      })\n      .catch((err) =>\n        console.log(`Error sending axios reguest (downvoting post): ${err}`)\n      );\n  } catch (error) {\n    dispatch({\n      type: DOWNVOTE_FAILURE,\n    });\n  }\n};\n","/Users/gavischneider/Desktop/Programming/Personal Projects/The Moshpit/the-moshpit/client/src/components/Publisher.tsx",["182","183","184"],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":6,"column":10,"nodeType":"191","messageId":"192","endLine":6,"endColumn":21},{"ruleId":"189","severity":1,"message":"193","line":6,"column":23,"nodeType":"191","messageId":"192","endLine":6,"endColumn":34},{"ruleId":"189","severity":1,"message":"194","line":7,"column":8,"nodeType":"191","messageId":"192","endLine":7,"endColumn":17},{"ruleId":"189","severity":1,"message":"195","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"196","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":17},{"ruleId":"189","severity":1,"message":"197","line":15,"column":11,"nodeType":"191","messageId":"192","endLine":15,"endColumn":28},{"ruleId":"189","severity":1,"message":"198","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":19},{"ruleId":"189","severity":1,"message":"199","line":9,"column":3,"nodeType":"191","messageId":"192","endLine":9,"endColumn":30},{"ruleId":"189","severity":1,"message":"200","line":10,"column":3,"nodeType":"191","messageId":"192","endLine":10,"endColumn":25},{"ruleId":"189","severity":1,"message":"201","line":1,"column":28,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"202","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":18},{"ruleId":"189","severity":1,"message":"203","line":6,"column":18,"nodeType":"191","messageId":"192","endLine":6,"endColumn":23},{"ruleId":"189","severity":1,"message":"195","line":7,"column":10,"nodeType":"191","messageId":"192","endLine":7,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":24,"column":6,"nodeType":"206","endLine":24,"endColumn":27,"suggestions":"207"},{"ruleId":"189","severity":1,"message":"198","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":19},{"ruleId":"189","severity":1,"message":"208","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":17},{"ruleId":"189","severity":1,"message":"209","line":8,"column":10,"nodeType":"191","messageId":"192","endLine":8,"endColumn":28},{"ruleId":"204","severity":1,"message":"210","line":19,"column":6,"nodeType":"206","endLine":19,"endColumn":8,"suggestions":"211"},{"ruleId":"189","severity":1,"message":"212","line":10,"column":3,"nodeType":"191","messageId":"192","endLine":10,"endColumn":19},{"ruleId":"204","severity":1,"message":"213","line":65,"column":6,"nodeType":"206","endLine":65,"endColumn":42,"suggestions":"214"},{"ruleId":"189","severity":1,"message":"215","line":5,"column":9,"nodeType":"191","messageId":"192","endLine":5,"endColumn":18},{"ruleId":"189","severity":1,"message":"198","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":19},{"ruleId":"189","severity":1,"message":"195","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":14},{"ruleId":"189","severity":1,"message":"198","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":19},{"ruleId":"189","severity":1,"message":"216","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":14},{"ruleId":"189","severity":1,"message":"199","line":10,"column":3,"nodeType":"191","messageId":"192","endLine":10,"endColumn":30},{"ruleId":"189","severity":1,"message":"200","line":11,"column":3,"nodeType":"191","messageId":"192","endLine":11,"endColumn":25},{"ruleId":"189","severity":1,"message":"193","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":21},{"ruleId":"189","severity":1,"message":"198","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":19},{"ruleId":"189","severity":1,"message":"217","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":22},{"ruleId":"189","severity":1,"message":"218","line":37,"column":7,"nodeType":"191","messageId":"192","endLine":37,"endColumn":13},{"ruleId":"219","severity":1,"message":"220","line":54,"column":13,"nodeType":"221","endLine":54,"endColumn":46},{"ruleId":"189","severity":1,"message":"222","line":5,"column":3,"nodeType":"191","messageId":"192","endLine":5,"endColumn":12},{"ruleId":"189","severity":1,"message":"223","line":23,"column":11,"nodeType":"191","messageId":"192","endLine":23,"endColumn":15},{"ruleId":"189","severity":1,"message":"193","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":21},{"ruleId":"189","severity":1,"message":"217","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":22},{"ruleId":"189","severity":1,"message":"198","line":6,"column":10,"nodeType":"191","messageId":"192","endLine":6,"endColumn":19},{"ruleId":"224","severity":1,"message":"225","line":8,"column":35,"nodeType":"226","messageId":"227","endLine":8,"endColumn":37},{"ruleId":"189","severity":1,"message":"228","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":27},{"ruleId":"189","severity":1,"message":"229","line":6,"column":10,"nodeType":"191","messageId":"192","endLine":6,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":23,"column":62,"nodeType":"232","messageId":"233","endLine":23,"endColumn":64},{"ruleId":"219","severity":1,"message":"220","line":49,"column":7,"nodeType":"221","endLine":52,"endColumn":8},{"ruleId":"189","severity":1,"message":"234","line":15,"column":17,"nodeType":"191","messageId":"192","endLine":15,"endColumn":30},{"ruleId":"189","severity":1,"message":"195","line":10,"column":10,"nodeType":"191","messageId":"192","endLine":10,"endColumn":14},{"ruleId":"189","severity":1,"message":"235","line":9,"column":9,"nodeType":"191","messageId":"192","endLine":9,"endColumn":23},{"ruleId":"230","severity":1,"message":"236","line":17,"column":38,"nodeType":"232","messageId":"237","endLine":17,"endColumn":40},{"ruleId":"204","severity":1,"message":"238","line":24,"column":6,"nodeType":"206","endLine":24,"endColumn":25,"suggestions":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'RootState' is defined but never used.","'Post' is defined but never used.","'Reducer' is defined but never used.","'PublisherResponse' is defined but never used.","'Publisher' is defined but never used.","'REMOVE_FEED_FROM_USER_STATE' is defined but never used.","'ADD_FEED_TO_USER_STATE' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","'PostT' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userState'. Either include them or remove the dependency array.","ArrayExpression",["242"],"'Sidebar' is defined but never used.","'getUsersPublishers' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'user', and 'userState'. Either include them or remove the dependency array.",["243"],"'getAllPublishers' is defined but never used.","React Hook useEffect has missing dependencies: 'authenticated', 'dispatch', and 'userState'. Either include them or remove the dependency array.",["244"],"'imgSource' is assigned a value but never used.","'User' is defined but never used.","'InitialState' is defined but never used.","'length' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'PublisherContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'authenticated' is assigned a value but never used.","'publisherState' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'props.publisher'. Either include it or remove the dependency array.",["245"],"no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [user, authenticated, userState, dispatch]",{"range":"254","text":"255"},"Update the dependencies array to be: [dispatch, user, userState]",{"range":"256","text":"257"},"Update the dependencies array to be: [authenticated, dispatch, loadedUsersFeeds, publishers, user, userState]",{"range":"258","text":"259"},"Update the dependencies array to be: [image, props.publisher, publishers]",{"range":"260","text":"261"},[773,794],"[user, authenticated, userState, dispatch]",[761,763],"[dispatch, user, userState]",[2091,2127],"[authenticated, dispatch, loadedUsersFeeds, publishers, user, userState]",[852,871],"[image, props.publisher, publishers]"]